set nocompatible " Must be first line


"===============================================================================
" Identify platform
"===============================================================================
	silent function! OSX()
	    return has('macunix')
	endfunction
	silent function! LINUX()
	    return has('unix') && !has('macunix') && !has('win32unix')
	endfunction
	silent function! WINDOWS()
	    return  (has('win16') || has('win32') || has('win64'))
	endfunction

"===============================================================================
" Load additional configuration files
"===============================================================================

	if WINDOWS()
		" Load Windows-style copy and paste key mappings
		source $VIMRUNTIME/mswin.vim

	endif

	" Read separate file containing bundles
	if filereadable(expand("~/.vimrc.bundles"))
		source ~/.vimrc.bundles
	endif

	" Read separate file for local settings
	if filereadable(expand("~/.vimrc.local"))
		source ~/.vimrc.local
	endif


"===============================================================================
" General settings
"===============================================================================
	set spell " Enable spell checking
	set t_Co=256 " Set terminal to use 256 colors
	set mouse=a " Automatically enable mouse usage
	set mousehide " Hide the mouse cursor while typing
	set background=dark " Assume a dark background
	set number " Enable line numbers
	syntax on " Enable syntax highlighting
	filetype plugin indent on " Use filetype detection
	color inkpot " Use inkpot colorscheme
	set cursorline " Highlight the current line
	set autoindent
	set smartindent
	inoremap <C-a> <C-o>A

	" Make columns past 80 a different color
	let &colorcolumn=join(range(81,999),",")



	" Enable omni completion.
	autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
	" Load Drupal tab settings for CSS files
	autocmd FileType css setlocal tabstop=2
	autocmd FileType css setlocal shiftwidth=2

	autocmd FileType scss setlocal tabstop=2
	autocmd FileType scss setlocal shiftwidth=2

	autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
	autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
	" Load Drupal tab settings for JavaScript files
	autocmd FileType javascript setlocal tabstop=2
	autocmd FileType javascript setlocal shiftwidth=2

	autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
	autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
	autocmd FileType php setlocal omnifunc=phpcomplete#CompletePHP
	" Load Drupal tab settings for PHP files
	autocmd FileType php setlocal expandtab
	autocmd FileType php setlocal tabstop=2
	autocmd FileType php setlocal shiftwidth=2
	autocmd FileType php setlocal autoindent
	autocmd FileType php setlocal smartindent

	syntax match Tab /\t/
	hi Tab gui=underline guifg=blue ctermbg=blue

	if has("autocmd")
	  " Drupal *.module and *.install files.
	  augroup module
	    autocmd BufRead,BufNewFile *.module set filetype=php
	    autocmd BufRead,BufNewFile *.install set filetype=php
	    autocmd BufRead,BufNewFile *.test set filetype=php
	    autocmd BufRead,BufNewFile *.inc set filetype=php
	    autocmd BufRead,BufNewFile *.profile set filetype=php
	    autocmd BufRead,BufNewFile *.view set filetype=php
	  augroup END
	endif

	"Neocomplcache settings
	" Disable AutoComplPop.
	let g:acp_enableAtStartup = 0
	" " Use neocomplcache.
	let g:neocomplcache_enable_at_startup = 1
	" " Use smartcase.
	let g:neocomplcache_enable_smart_case = 1
	" " Set minimum syntax keyword length.
	let g:neocomplcache_min_syntax_length = 3
	let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'

	" Define dictionary.
	let g:neocomplcache_dictionary_filetype_lists = {
		\ 'default' : '',
		\ 'vimshell' : $HOME.'/.vimshell_hist',
	        \ 'scheme' : $HOME.'/.gosh_completions'
	\ }

	" Define keyword.
	if !exists('g:neocomplcache_keyword_patterns')
		let g:neocomplcache_keyword_patterns = {}
	endif
	let g:neocomplcache_keyword_patterns['default'] = '\h\w*'
	" Enable heavy omni completion.
	if !exists('g:neocomplcache_omni_patterns')
		let g:neocomplcache_omni_patterns = {}
	endif

	let g:neocomplcache_omni_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
	let g:neocomplcache_omni_patterns.c = '[^.[:digit:]*\t]\%(\.\|->\)'
	let g:neocomplcache_omni_patterns.cpp = '[^.[:digit:]*\t]\%(\.\|->\)\|\h\w*::'

	let g:ctrlp_working_path_mode = 0

"===============================================================================
" Font settings
" TODO: Add fonts for other OSes.
"===============================================================================
	if has("gui_running")
	  if WINDOWS()
	    set guifont=Consolas:h11:cANSI
	  endif
	endif

"===============================================================================
" Key mappings
"===============================================================================
	let mapleader="," " Make leader a comma

	" Code folding options
	nmap <leader>f0 :set foldlevel=0<CR>
	nmap <leader>f1 :set foldlevel=1<CR>
	nmap <leader>f2 :set foldlevel=2<CR>
	nmap <leader>f3 :set foldlevel=3<CR>
	nmap <leader>f4 :set foldlevel=4<CR>
	nmap <leader>f5 :set foldlevel=5<CR>
	nmap <leader>f6 :set foldlevel=6<CR>
	nmap <leader>f7 :set foldlevel=7<CR>
	nmap <leader>f8 :set foldlevel=8<CR>
	nmap <leader>f9 :set foldlevel=9<CR>


	" Neocomplcache key-mappings.
	inoremap <expr><C-g>     neocomplcache#undo_completion()
	inoremap <expr><C-l>     neocomplcache#complete_common_string()
	" <CR>: close popup and save indent.
	inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
	function! s:my_cr_function()
		return neocomplcache#smart_close_popup() . "\<CR>"
       endfunction
       " <TAB>: completion.
       inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
       " <C-h>, <BS>: close popup and delete backword char.
       inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>"
       inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>"
       inoremap <expr><C-y>  neocomplcache#close_popup()
       inoremap <expr><C-e>  neocomplcache#cancel_popup()

"===============================================================================
" NERDTree Settings
"===============================================================================
	map <C-n> :NERDTreeToggle<CR>
